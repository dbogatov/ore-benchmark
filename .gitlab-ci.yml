stages:
- build
- test
- release

generate-data:
  image: dbogatov/docker-images:alpine-extras-latest
  stage: build
  script:
  - ./tools/data-gen/tpc-h.sh -s 0.01
  artifacts:
    expire_in: 1 day
    paths:
    - tools/data-gen/tpc-h/*.tbl
  tags:
  - docker

build-app:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-sdk-alpine
  stage: build
  script:
  - printf "namespace CLI { public partial class Version { public override string ToString() => \"%s\"; } }" $(echo $CI_BUILD_REF | cut -c1-8) > ./src/cli/Version.cs
  - dotnet restore src/cli/ --disable-parallel 
  - dotnet restore tools/data-gen/ --disable-parallel 
  - dotnet publish -c release src/cli/ -o dist/
  - dotnet publish -c release tools/data-gen/ -o dist/
  artifacts:
    expire_in: 1 day
    paths:
    - src/cli/dist
    - tools/data-gen/dist
    - tools/data-gen/generate.sh
    - tools/simulation/
  tags:
  - docker

build-tests:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-sdk-alpine
  stage: build
  script:
  - dotnet restore --disable-parallel test/
  - dotnet publish -c release --no-restore test/ -o dist/
  artifacts:
    expire_in: 1 day
    paths:
    - test/dist
    - test/test.csproj
  tags:
  - docker

build-docs:
  image: dbogatov/docker-sources:tsgkadot-docker-docfx
  stage: build
  script:
  - ./docs/docs.sh
  artifacts:
    paths:
    - docs/_site
    - docs/Dockerfile
    - docs/nginx.conf
  tags:
  - docker

coverage-report:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-sdk-alpine
  stage: test
  script:
  - apk add --update bash
  - ./tools/test-coverage/coverage.sh
  dependencies: []
  artifacts:
    paths:
      - coverage-html/
  tags:
  - docker

unit-tests:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-sdk-alpine
  variables:
    GIT_STRATEGY: none
  stage: test
  script:
  - dotnet test test/test.csproj --output dist/ --no-build --no-restore --verbosity n --logger trx --filter Category=Unit
  - dotnet tool install --global trx2junit --version 1.0.2
  - export PATH="$PATH:/root/.dotnet/tools"
  - trx2junit test/TestResults/*.trx
  - cp test/TestResults/*.xml unit.xml
  dependencies:
  - build-tests
  artifacts:
    reports:
      junit: unit.xml
  tags:
  - docker

integration-tests:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-sdk-alpine
  variables:
    GIT_STRATEGY: none
  stage: test
  script:
  - dotnet test test/test.csproj --output dist/ --no-build --no-restore --verbosity n --logger trx --filter Category=Integration
  - dotnet tool install --global trx2junit --version 1.0.2
  - export PATH="$PATH:/root/.dotnet/tools"
  - trx2junit test/TestResults/*.trx
  - cp test/TestResults/*.xml integration.xml
  artifacts:
    reports:
      junit: integration.xml
  dependencies:
  - build-tests
  tags:
  - docker

system-protocol-tests:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-runtime-alpine
  variables:
    GIT_STRATEGY: none
  stage: test
  script:
  - apk add --update bash ruby ruby-bundler
  - ./tools/data-gen/generate.sh -d 20 -q 20 -s 1305 -n
  - ./tools/simulation/protocol.rb
  artifacts:
    paths:
      - results/protocol.json
  dependencies:
  - build-app
  - generate-data
  tags:
  - docker

system-schemes-tests:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-runtime-alpine
  variables:
    GIT_STRATEGY: none
  stage: test
  script:
  - apk add --update bash ruby ruby-bundler
  - ./tools/data-gen/generate.sh -d 20 -s 1305 -n
  - ./tools/simulation/pure-schemes.rb
  artifacts:
    paths:
      - results/schemes.json
  dependencies:
  - build-app
  - generate-data
  tags:
  - docker

docs-website:
  variables:
    GIT_STRATEGY: none
  stage: release
  script:
  - docker build -t registry.dbogatov.org/bu/ore-benchmark/project-code/docs:$CI_BUILD_REF_NAME docs/
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.dbogatov.org
  - docker push registry.dbogatov.org/bu/ore-benchmark/project-code/docs:$CI_BUILD_REF_NAME
  dependencies:
  - build-docs
  tags:
  - shell

pages:
  image: dbogatov/docker-images:alpine-extras-latest
  variables:
    GIT_STRATEGY: none
  stage: release
  script:
  - mv docs/_site public/
  - echo "Uploading files to pages"
  artifacts:
    expire_in: 30 min
    paths:
    - public
  dependencies:
  - build-docs
  tags:
  - docker
  only:
  - master
