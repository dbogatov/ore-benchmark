stages:
- build
- test
- release

build-app:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-sdk-alpine
  stage: build
  script:
  - printf "namespace CLI{public static class GlobalVar{public static readonly string Version = \"%s\";}}" $(echo $CI_BUILD_REF | cut -c1-8) > ./src/cli/Version.cs
  - dotnet restore src/cli/ --disable-parallel 
  - dotnet restore tools/data-gen/ --disable-parallel 
  - dotnet publish -c release src/cli/ -o dist/
  - dotnet publish -c release tools/data-gen/ -o dist/
  artifacts:
    expire_in: 1 day
    paths:
    - src/cli/dist
    - tools/data-gen/dist
    - tools/data-gen/generate.sh
    - tools/simulation/
  tags:
  - docker

build-tests:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-sdk-alpine
  stage: build
  script:
  - dotnet restore --disable-parallel test/
  - dotnet publish -c release --no-restore test/ -o dist/
  artifacts:
    expire_in: 1 day
    paths:
    - test/dist
    - test/test.csproj
  tags:
  - docker

build-docs:
  image: dbogatov/docker-images:doxygen-latest
  stage: build
  script:
  - cd docs
  - rm -rf documentation
  - mkdir -p documentation
  - doxygen Doxyfile
  artifacts:
    paths:
    - docs/documentation
    - docs/Dockerfile
    - docs/nginx.conf
  tags:
  - docker

coverage-report:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-sdk-alpine
  stage: test
  script:
  - apk add --update bash
  - ./tools/test-coverage/coverage.sh
  dependencies: []
  artifacts:
    paths:
      - coverage-html/
  tags:
  - docker

unit-tests:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-sdk-alpine
  variables:
    GIT_STRATEGY: none
  stage: test
  script:
  - dotnet test test/test.csproj --output dist/ --no-build --no-restore --verbosity n --filter Category=Unit
  dependencies:
  - build-tests
  tags:
  - docker

integration-tests:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-sdk-alpine
  variables:
    GIT_STRATEGY: none
  stage: test
  script:
  - dotnet test test/test.csproj --output dist/ --no-build --no-restore --verbosity n --filter Category=Integration
  dependencies:
  - build-tests
  tags:
  - docker

system-protocol-tests:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-runtime-alpine
  variables:
    GIT_STRATEGY: none
  stage: test
  script:
  - apk add --update bash ruby ruby-bundler
  - ./tools/data-gen/generate.sh -d 20 -q 20 -s 1305 -n
  - ./tools/simulation/protocol.rb
  artifacts:
    paths:
      - results/protocol.csv
  dependencies:
  - build-app
  tags:
  - docker

system-schemes-tests:
  image: dbogatov/docker-sources:microsoft-dotnet-2.1-runtime-alpine
  variables:
    GIT_STRATEGY: none
  stage: test
  script:
  - apk add --update bash ruby ruby-bundler
  - ./tools/data-gen/generate.sh -t 20 -s 1305 -n
  - ./tools/simulation/pure-schemes.rb
  artifacts:
    paths:
      - results/schemes.csv
  dependencies:
  - build-app
  tags:
  - docker

docs-website:
  variables:
    GIT_STRATEGY: none
  stage: release
  script:
  - docker build -t registry.dbogatov.org/bu/cs-562/project-code/docs:$CI_BUILD_REF_NAME docs/
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.dbogatov.org
  - docker push registry.dbogatov.org/bu/cs-562/project-code/docs:$CI_BUILD_REF_NAME
  dependencies:
  - build-docs
  tags:
  - shell

pages:
  image: dbogatov/docker-images:alpine-extras-latest
  variables:
    GIT_STRATEGY: none
  stage: release
  script:
  - mv docs/documentation/html/ public/
  - echo "Uploading files to pages"
  artifacts:
    expire_in: 30 min
    paths:
    - public
  dependencies:
  - build-docs
  tags:
  - docker
  only:
  - master
